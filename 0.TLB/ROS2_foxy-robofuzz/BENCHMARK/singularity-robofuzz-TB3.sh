#!/bin/bash

# This script run inside CONTAINER.

# Benchmarking TurtleBot3 Burger
# Usage singularity-robofuzz_TB3.sh <timeout>
#     Examples:
#        1 hour: singularity-robofuzz_TB3.sh 1h
#        30 minutes: singularity-robofuzz_TB3.sh 30m

#Debbuging
#set -x                 # activate debugging from here
set +x # desactivate debugging from here

export HS_TIMEOUT=$1 # Define timeout using firt argument of script

# Set values generated by singularity-init.sh in /tmp/value/
export HOME="$(cat /tmp/value/c_HOME_PATH)"
export HS_IDNUM="$(cat /tmp/value/IDNUM)"

# Set distro
export ROS_DISTRO=foxy

# Set command and output logfile, what benchmarking and where save the results.
COMMAND="python3 -u ./fuzzer.py --tb3-sitl --no-cov --method message --schedule single --repeat 1 --interval 5.0 --watchlist watchlist/turtlebot3.json"
c_OUTPUT_FILEPATH="/log/$(basename $0)_${HS_TIMEOUT}_${HS_IDNUM}.pyout"

echo "+ [${HS_IDNUM}] Benchmarking TurtleBot3 Burger for $HS_TIMEOUT +"

# Setting ROS2 + robofuzz enviroment
source "/opt/ros/$ROS_DISTRO/setup.bash"
source "/robofuzz/ros2_foxy/install/setup.bash"
source "/robofuzz/targets/px4_ros_com_ros2/install/setup.bash"
source "/robofuzz/targets/idltest_ws/install/setup.bash"
source "/robofuzz/targets/turtlebot3_ws/install/setup.bash"
source "/robofuzz/targets/moveit2_ws/install/setup.bash"

cd /robofuzz/src
export PYTHONUNBUFFERED=1

# Check use of timeout
if [ -z ${HS_TIMEOUT} ]; then # If it is not define. Run command without TIMEOUT limit.
    $(echo $COMMAND) >>$(echo $c_OUTPUT_FILEPATH)
else # Run command with TIMEOUT limit.
    echo "INFO: TIMEOUT value $HS_TIMEOUT ."
    time timeout $HS_TIMEOUT $(echo $COMMAND) >>$(echo $c_OUTPUT_FILEPATH)
fi
